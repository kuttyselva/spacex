{"version":3,"sources":["components/LaunchItems.js","components/Missionkey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["LaunchItems","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","react_router_dom","to","concat","classNames","text-success","text-danger","dist_default","format","Missionkey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_esm","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74dcef7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment'\r\nimport {Link} from 'react-router-dom'\r\nexport default function LaunchItems({launch:{flight_number,mission_name,launch_date_local,launch_success}}) {\r\n    \r\n    return (\r\n        <div className=\"card card-body mb-3 text-center\">\r\n             <Link className=\"btn btn-secondary\" to={`/launch/${flight_number}`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: <span className={classNames({\r\n                        'text-success':launch_success,\r\n                        'text-danger':!launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <p>date: <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment></p>\r\n                </div>\r\n               \r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Missionkey() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p><span className=\"px-3 mr-2 bg-success\"/>= Success</p>\r\n            <p><span className=\"px-3 mr-2 bg-danger\"/>= Failure</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component,Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport LaunchItems from './LaunchItems';\r\nimport Missionkey from './Missionkey'\r\nconst LAUNCHES_QUERY=gql`\r\nquery LaunchQuery{\r\n    launches{\r\n        flight_number\r\n        mission_name\r\n        launch_date_local\r\n        launch_success\r\n    }\r\n}\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"display-4 my-3\">launches</h1>\r\n                <Missionkey/>\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({loading,error,data})=>{\r\n                            if(loading) return <h4>Loading ...</h4>\r\n                            if(error) return console.log(error)\r\n                            \r\n                            return <Fragment>{\r\n                                data.launches.map(launch=>(\r\n                                    <LaunchItems key={launch.flight_number} launch={launch}/>\r\n                                ))\r\n                            }</Fragment>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component,Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport {Link} from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY=gql`\r\nquery LaunchQuery($flight_number: Int){\r\n    launch(flight_number:$flight_number){\r\n        flight_number\r\n        mission_name\r\n        launch_year\r\n        launch_success\r\n        launch_date_local,\r\n        rocket{\r\n            rocket_id\r\n            rocket_name\r\n            rocket_type\r\n        }\r\n    }\r\n}\r\n`;\r\nexport class Launch extends Component {\r\n    render() {\r\n        let {flight_number}= this.props.match.params;\r\n        flight_number=parseInt(flight_number);\r\n        return (\r\n            <Fragment>\r\n              <Query query={LAUNCH_QUERY} variables={{flight_number}}>\r\n                    {({loading,error,data})=>{\r\n                        if(loading) return <h4>Loading...</h4>\r\n                        if(error) console.log(error);\r\n                        console.log(data);\r\n                        const {mission_name,flight_number,launch_year,launch_success,rocket:{rocket_id,rocket_name,rocket_type}}=data.launch;\r\n                        return <div className=\"container\">\r\n                            <h1 className=\"display-4 my-3\"> <span className=\"text-dark\">Mission:</span>{mission_name}</h1>\r\n                            <h4 className=\"mb-3\">Launch Details</h4>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Flight Number : {flight_number}</li>\r\n                                <li className=\"list-group-item\">Launch Year : {launch_year}</li>\r\n                                <li className=\"list-group-item\">Launch Success : <span className={classNames({'text-success':launch_success,'text-danger':!launch_success})}> {launch_success?'Yes':'No'}</span></li>\r\n                            </ul>\r\n                            <h4 className=\"my-3\">Rocket Details</h4>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Rocket ID : {rocket_id}</li>\r\n                                <li className=\"list-group-item\">Rocket Type : {rocket_type}</li>\r\n                                <li className=\"list-group-item\">Rocket Name :  {rocket_name}</li>\r\n                            </ul>\r\n                            <hr/>\r\n                            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n                        </div>\r\n                    }}\r\n              </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider}from 'react-apollo';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\n\nconst client=new ApolloClient({\n  uri:'/graphql'\n})\nclass App extends Component {\n  render(){\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n    <div className=\"container\">\n    <Route exact path=\"/\" component={Launches}/>\n    <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n    </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}